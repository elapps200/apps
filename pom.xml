<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.syscom</groupId>
	<artifactId>apps</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>apps</name>
	<description>apps</description>

	<modules>
		<module>apps-db-scripts</module>
		<module>apps-service-interfaces</module>
		<module>apps-dao</module>
		<module>apps-business</module>
		<module>apps-web</module>
		<module>apps-web-service-models</module>
		<module>apps-models</module>
		<module>apps-web-service</module>
	</modules>

	<!-- The release process will interact with the Source Control of the project. 
		That's why we define the <scm> element here in our pom.xml -->
	<scm>
		<connection>scm:git:https://github.com/elapps200/apps.git</connection>
		<url>https://github.com/elapps200/apps</url>
		<developerConnection>scm:git:https://github.com/elapps200/apps.git</developerConnection>
	</scm>

	<!-- In order for Maven to make release to a Nexus server, we define here 
		the repository information with <distributionManagement> element -->
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Repository Nexus release</name>
			<url>http://192.168.0.14:9081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Repository Nexus snapshot</name>
			<url>http://192.168.0.14:9081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<project.encoding>UTF-8</project.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<compile.source>1.8</compile.source>
		<compile.target>1.8</compile.target>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<junit.version>4.12</junit.version>
		<dbmaintain.version>2.4</dbmaintain.version>
		<postgresql.version>9.4-1201-jdbc41</postgresql.version>
		<mybatis.version>3.3.0</mybatis.version>
		<mybatis-spring.version>1.2.3</mybatis-spring.version>
		<spring.version>4.2.6.RELEASE</spring.version>
		<spring-security.version>4.0.4.RELEASE</spring-security.version>
		<cxf.version>3.1.7</cxf.version>
		<commons-lang.version>3.4</commons-lang.version>
		<log4j.version>1.2.17</log4j.version>
		<apache-commons-codec.version>1.10</apache-commons-codec.version>
		<assertj.version>3.3.0</assertj.version>
		<jetty.version>9.4.0.M1</jetty.version>
		<apache-tika.version>1.11</apache-tika.version>
		<apache-common-io.version>2.4</apache-common-io.version>
		<apache-fileUpload.version>1.1.1</apache-fileUpload.version>
		<guava.version>19.0</guava.version>
		<codehaus-jackson.version>1.9.13</codehaus-jackson.version>
		<fasterxml-jackson.version>2.6.0</fasterxml-jackson.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>